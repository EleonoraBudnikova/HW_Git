GIT Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON.
	Cоздаем новый репозиторий на GitHub с названием JSON, public, add a README file
 5. Клонировать репозиторий JSON на локальный компьютер.
	$ git clone https://github.com/EleonoraBudnikova/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
	$ touch new.json
 7. Добавить файл под гит.
	$ git add new.json
 8. Закоммитить файл.
	$ git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий.
	$ git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	$ vim new.json
{
 "full name": "Леонтьева Анастасия Сергеевна",
 "age": 39,
 "pets quantity": 1,
 "future expected salary": "$2000"
}

 11. Отправить изменения на внешний репозиторий.
	$ git add new.json
	$ git commit -m "added data"
	$ git push

 12. Создать файл preferences.json
	$ touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	vim preferences.json
{
        "my favourite film":"Spirited Away by Hayao Miyazaki ",
        "my favourite tv-series":"Friends",
        "my food":"mediterranean cuisine",
        "favourite season":"spring",
        "country to visit":"Japan"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON.
	$ touch skills.json
	$ vim skills.json
{
        "skill1":"Terminal",
        "skill2":"Git",
        "skill3":"JS",
        "skill4":"SQL",
        "skill5":"Jmeter",
        "skill6":"Scrum"
}

 15. Отправить сразу 2 файла на внешний репозиторий.
	$ git add preferences.json skills.json | git commit -m "add data"
	$ git push

 16. На веб интерфейсе создать файл bug_report.json.
	в GitHub Add file > Create file > bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	в GitHub Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	в GitHub Edit this file (Pencil-icon)
{
"Issue Title": "Pop-up window does not dissappear until the date is not changed",
"Issue Type": "Bug",
"Priority": "Low",
"Issue Status": "Blocked",
"Author_CreatedBy": "Vasily Vasilkov",
"Severity": "",
"Build": "",
"Environment": ""
}
{
"Issue Description": "Steps to reproduce" [
	{
	 "Step1": "Select any dish",
	 "Step2": "Go to the basket",
	 "Step3": "Select a date next to the last delivery date in the menu",
	 "Step4": "After the pop-up Delivery up to 14_11 appears, click on the Change a date button",
	 "Step5": "Look at the pop-up"
	}
],
"Expected result": "The pop-up Delivery up to 14_11 does not appear",
"Actual result": "The pop-up remains until the date is not chaged to the suitable one"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON.
	$ git pull
================================

XML
 21. Создать внешний репозиторий c названием XML.
	Cоздаем новый репозиторий на GitHub с названием XML, public, add a README file
 22. Клонировать репозиторий XML на локальный компьютер.
	$ git clone https://github.com/EleonoraBudnikova/XML.git
 23. Внутри локального XML создать файл “new.xml”.
	$ touch new.xml
 24. Добавить файл под гит.
	$ git add new.xml
 25. Закоммитить файл.
	$ git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
	$ git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	$ vim new.xml

 "full name": "Леонтьева Анастасия Сергеевна",
 "age": 39,
 "pets quantity": 1,
 "future expected salary": "$2000"


 28. Отправить изменения на внешний репозиторий.
	$ git add new.xml
	$ git commit -m "add data"
	$ git push

 29. Создать файл preferences.xml
	$ touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	vim preferences.xml
 
        "my favourite film":"Spirited Away by Hayao Miyazaki ",
        "my favourite tv-series":"Friends",
        "my food":"mediterranean cuisine",
        "favourite season":"spring",
        "country to visit":"Japan"
 

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	$ touch skills.xml
	$ vim skills.xml
 
        "skill1":"Terminal",
        "skill2":"Git",
        "skill3":"JS",
        "skill4":"SQL",
        "skill5":"Jmeter",
        "skill6":"Scrum"


 32. Сделать коммит в одну строку.
	$ git add preferences.xml skills.xml | git commit -m "add data"
 33. Отправить сразу 2 файла на внешний репозиторий.
	$ git push
 34. На веб интерфейсе создать файл bug_report.xml.
	в GitHub Add file > Create file > bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	в GitHub Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	в GitHub Edit this file (Pencil-icon)
 
"Issue Title": "Pop-up window does not dissappear until the date is not changed",
"Issue Type": "Bug",
"Priority": "Low",
"Issue Status": "Blocked",
"Author_CreatedBy": "Vasily Vasilkov",
"Severity": "",
"Build": "",
"Environment": ""
 
 
"Issue Description": "Steps to reproduce"  
	 
	 "Step1": "Select any dish",
	 "Step2": "Go to the basket",
	 "Step3": "Select a date next to the last delivery date in the menu",
	 "Step4": "After the pop-up Delivery up to 14_11 appears, click on the Change a date button",
	 "Step5": "Look at the pop-up"
	 
 ,
"Expected result": "The pop-up Delivery up to 14_11 does not appear",
"Actual result": "The pop-up remains until the date is not chaged to the suitable one"
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML.
	$ git pull
================================

TXT
 1. Создать внешний репозиторий c названием TXT.
	Cоздаем новый репозиторий на GitHub с названием TXT, public, add a README file
 2. Клонировать репозиторий TXT на локальный компьютер.
	$ git clone https://github.com/EleonoraBudnikova/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
	$ touch new.txt
 4. Добавить файл под гит.
	$ git add new.txt
 5. Закоммитить файл.
	$ git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
	$ git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	$ vim new.txt

Full name: Леонтьева Анастасия Сергеевна,
Age: 39,
Pets quantity: 1,
Future expected salary: $2000

 8. Отправить изменения на внешний репозиторий.
	$ git add new.txt
	$ git commit -m "add data"
	$ git push

 9. Создать файл preferences.txt.
	$ touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	vim preferences.txt
 
My favourite film: Spirited Away by Hayao Miyazaki,
My favourite tv-series: Friends,
My food": mediterranean cuisine,
Favourite season: spring,
Country to visit: Japan
 
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT.
	$ touch skills.xml
	$ vim skills.xml
 
Skill1: Terminal,
Skill2": Git,
Skill3: JS,
Skill4": SQL,
Skill5: Jmeter,
Skill6: Scrum

 12. Сделать коммит в одну строку.
	$ git add preferences.txt skills.txt | git commit -m "add data"
 13. Отправить сразу 2 файла на внешний репозиторий.
	$ git push
 14. На веб интерфейсе создать файл bug_report.txt.
	в GitHub Add file > Create file > bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	$ git add preferences.xml skills.xml | git commit -m "add data"
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
	в GitHub Edit this file (Pencil-icon)
 
Issue Title: Pop-up window does not dissappear until the date is not changed,
Issue Type: Bug
Priority: Low
Issue Status: Blocked
Author_CreatedBy: Vasily Vasilkov
Severity:
Build:
Environment:
 
Issue Description.
Steps to reproduce:  
1) select any dish;
2) go to the basket;
3) select a date next to the last delivery date in the menu;
4) after the pop-up Delivery up to 14_11 appears, click on the Change a date button;
5) look at the pop-up
	 
Expected result: The pop-up Delivery up to 14_11 does not appear
Actual result: The pop-up remains until the date is not chaged to the suitable one
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT.
	$ git pull